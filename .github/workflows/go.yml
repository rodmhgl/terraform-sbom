name: Go

on:
  push:
    branches: [ "main" ]
    tags: # Trigger on version tags (e.g., v1.0.0)
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "1.23"

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build Linux Binary
        run: GOOS=linux GOARCH=amd64 go build -o terraform-sbom

      - name: Build Windows Binary
        run: GOOS=windows GOARCH=amd64 go build -o terraform-sbom.exe

      - name: Upload Linux Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: terraform-sbom
          path: ./terraform-sbom

      - name: Upload Windows Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: terraform-sbom
          path: ./terraform-sbom.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./terraform-sbom
          asset_name: terraform-sbom
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./terraform-sbom.exe
          asset_name: terraform-sbom.exe
          asset_content_type: application/octet-stream
